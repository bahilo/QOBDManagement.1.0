<Window x:Class="QOBDManagement.MainWindow"
        x:Name="Window"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QOBDManagement"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Views="clr-namespace:QOBDManagement.Views"
        xmlns:ViewModel="clr-namespace:QOBDManagement.ViewModel"
        xmlns:Classes="clr-namespace:QOBDManagement.Classes"
        Title="AVA" 
        Closed="Window_Closing"
        Icon="ava_logo.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- ViewModels -->
            <DataTemplate DataType="{x:Type ViewModel:ClientViewModel}">
                <Views:ClientView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:ItemViewModel}">
                <Views:ItemView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:OrderViewModel}">
                <Views:OrderView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:AgentViewModel}">
                <Views:AgentView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:ReferentialViewModel}">
                <Views:OptionView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:StatisticViewModel}">
                <Views:StatisticView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:HomeViewModel}">
                <Views:HomeView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:QuoteViewModel}">
                <Views:QuoteView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:SecurityLoginViewModel}">
                <Views:SecurityLoginView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:OptionSecurityViewModel}">
                <Views:OptionSecurityView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:OptionGeneralViewModel}">
                <Views:OptionGeneralView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:OptionDataAndDisplayViewModel}">
                <Views:OptionDataAndDisplayView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:OptionEmailViewModel}">
                <Views:OptionEmailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:ConfirmationViewModel}">
                <Views:ConfirmationView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:NotificationViewModel}">
                <Views:NotificationView/>
            </DataTemplate>

            <!-- Detail views -->
            <DataTemplate DataType="{x:Type ViewModel:ItemDetailViewModel}">
                <Views:ItemDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:ClientDetailViewModel}">
                <Views:ClientDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:AgentDetailViewModel}">
                <Views:AgentDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModel:OrderDetailViewModel}">
                <Views:OrderDetailView/>
            </DataTemplate>

            <Classes:TriggerConverter x:Key="TriggerConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost Identifier="RootDialog" Loaded="DialogHost_Loaded"
                               IsOpen="{Binding Dialog.IsDialogOpen, UpdateSourceTrigger=PropertyChanged}">
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="120"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Here is the header -->

                <Grid x:Name="gvHeader">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Left">
                        <Image Source="{Binding LogoImageDisplay.ImageSource, UpdateSourceTrigger=PropertyChanged}" Stretch="Uniform"
                           Width="{Binding DataContext.LogoImageDisplay.TxtInfoItem1, ElementName=Window, UpdateSourceTrigger=PropertyChanged}"
                           Height="{Binding DataContext.LogoImageDisplay.TxtInfoItem2, ElementName=Window, UpdateSourceTrigger=PropertyChanged}"/>
                        <Image Source="{Binding HeaderImageDisplay.ImageSource, UpdateSourceTrigger=PropertyChanged}" Stretch="Uniform" Margin="10 0 0 0"
                           Width="{Binding DataContext.HeaderImageDisplay.TxtInfoItem1, ElementName=Window, UpdateSourceTrigger=PropertyChanged}"
                           Height="{Binding DataContext.HeaderImageDisplay.TxtInfoItem2, ElementName=Window, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1"  HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Style="{DynamicResource MaterialDesignFlatButton}" x:Name="btnEmail" ToolTip="New Messages"
                                        Command="{Binding NewMessageHomePageCommand}">
                            <WrapPanel>
                                <TextBlock Text="{Binding ChatRoomViewModel.DiscussionViewModel.TxtNbNewMessage, UpdateSourceTrigger=PropertyChanged}" Foreground="Black"/>
                                <materialDesign:PackIcon Kind="MessageAlert" />
                            </WrapPanel>
                        </Button>
                        <Separator Margin="10 0 10 0" />
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <materialDesign:PackIcon Kind="AccountCircle" FontSize="10"/>
                            <TextBlock x:Name="txbWelcomeUser" Text="{Binding TxtUserName, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <Separator Margin="10 0 10 0" />
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="True">
                            <StackPanel>
                                <Button CommandParameter="{Binding AuthenticatedUserModel, UpdateSourceTrigger=PropertyChanged}">
                                    <Button.Command>
                                        <MultiBinding Converter="{StaticResource TriggerConverter}">
                                            <Binding Path="AgentViewModel.GetCurrentAgentCommand"/>
                                        </MultiBinding>
                                    </Button.Command>
                                    Profile
                                </Button>
                                <Button Content="Log Out" Command="{Binding SecurityLoginViewModel.LogoutCommand}"/>
                            </StackPanel>
                        </materialDesign:PopupBox>

                    </StackPanel>
                    <StackPanel Grid.Column="0" Grid.ColumnSpan="2"  Grid.Row="1" VerticalAlignment="Bottom">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                                <ColumnDefinition  Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btnBack" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="back">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="ArrowLeftBold"/>
                                </StackPanel>
                            </Button>
                            <Button x:Name="btnRefresh" Grid.Column="1" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="refresh">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Refresh"/>
                                </StackPanel>
                            </Button>
                            <Button x:Name="btnHome" Grid.Column="2" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="home">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Home"/>
                                        <TextBlock Margin="5 0 0 0">Home</TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="3" x:Name="btnCLient" Style="{DynamicResource MaterialDesignFlatButton}"  Command="{Binding CommandNavig}" CommandParameter="client">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="HumanMaleFemale"/>
                                    <TextBlock Margin="5 0 0 0">Client</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="4" x:Name="btnCatalog" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="item">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="FolderMultipleOutline"/>
                                    <TextBlock Margin="5 0 0 0">Catalog</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="5" x:Name="btnQuote" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="quote">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="FormatFloatLeft"/>
                                    <TextBlock Margin="5 0 0 0">Quote</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="6" x:Name="btnOrder" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="order">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="FormatFloatRight"/>
                                    <TextBlock Margin="5 0 0 0">Orders</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="7" x:Name="btnStatistic" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="statistic">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="ChartBar"/>
                                    <TextBlock Margin="5 0 0 0">Statistic</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="8" x:Name="btnAgent" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="agent">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Alarm"/>
                                    <TextBlock Margin="5 0 0 0">Agent</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="9" x:Name="btnNotification" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="notification">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Alarm"/>
                                    <TextBlock Margin="5 0 0 0">Notification</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="10" x:Name="btnOption" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding CommandNavig}" CommandParameter="option">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Apps"/>
                                    <TextBlock Margin="5 0 0 0">Option</TextBlock>
                                </StackPanel>
                            </Button>
                        </Grid>
                        <Grid Grid.ColumnSpan="10" Height="3">
                            <ProgressBar x:Name="pbarTop"
                             materialDesign:ShadowAssist.ShadowDepth="Depth4" 
                             VerticalAlignment="Center"
                             Minimum="0"
                             Value="{Binding ProgressBarPercentValue,UpdateSourceTrigger=PropertyChanged}"
                             Maximum="100"/>
                            <ProgressBar IsIndeterminate="True" materialDesign:ShadowAssist.ShadowDepth="Depth4" 
                             Visibility="{Binding SearchProgressVisibility, UpdateSourceTrigger=PropertyChanged}"
                             VerticalAlignment="Top" />
                        </Grid>
                    </StackPanel>
                </Grid>

                <!-- End -->

                <!-- Here come all views -->
                
                <Grid x:Name="gvCentral" Grid.Row="1" Margin="0 0 0 10">
                    <ContentControl Content="{Binding CurrentViewModel, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                
                <!-- End -->
                
            </Grid>
        </ScrollViewer>
    </materialDesign:DialogHost>
</Window>
