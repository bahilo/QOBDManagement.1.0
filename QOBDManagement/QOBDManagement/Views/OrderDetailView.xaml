<UserControl x:Class="QOBDManagement.Views.OrderDetailView"
             Name="OrderDetail"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QOBDManagement.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ViewModel="clr-namespace:QOBDManagement.ViewModel"
             xmlns:Views="clr-namespace:QOBDManagement.Views"
             xmlns:Main="clr-namespace:QOBDManagement"
             xmlns:Classes="clr-namespace:QOBDManagement.Classes"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="800" Loaded="OrderDetailView_Loaded">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type ViewModel:OrderSideBarViewModel}">
            <Views:OrderSideBarView/>
        </DataTemplate>
        <Classes:TriggerConverter x:Key="TriggerConverter"/>
    </UserControl.Resources>

    <Grid Grid.Row="1" x:Name="gvMain" VerticalAlignment="Top" Margin="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="270"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Here comes the side menu-->

        <Grid x:Name="gvLeftSide"  Height="{Binding Height, ElementName=gvMain, UpdateSourceTrigger=PropertyChanged}" 
                          VerticalAlignment="Top" Width="270" HorizontalAlignment="Left">
            <ContentControl Content="{Binding OrderViewModel.OrderSideBarViewModel, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <!-- End -->


        <!-- Here is the main content of the view -->

        <Grid Grid.Column="1"  Height="{Binding Height, ElementName=gvMain, UpdateSourceTrigger=PropertyChanged}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>

                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>

                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header zone -->
            
            <Label FontSize="20" Foreground="DarkGray" HorizontalAlignment="Center" Content="{Binding OrderViewModel.OrderDetailViewModel.Title, UpdateSourceTrigger=PropertyChanged}"/>
            <materialDesign:ColorZone Grid.Row="1"  Mode="Accent">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock >Order ID</TextBlock>
                        <TextBlock Margin="10 0 0 0" Text="{Binding OrderViewModel.OrderDetailViewModel.OrderSelected.TxtID}"/>
                        <TextBlock Margin="10 0 0 0" > for the Company</TextBlock>
                        <TextBlock Margin="10 0 0 0" FontStyle="Italic" Text="{Binding OrderViewModel.OrderDetailViewModel.OrderSelected.CLientModel.TxtCompany}"/>
                        <TextBlock Margin="10 0 0 0" > Managed by</TextBlock>
                        <TextBlock Margin="10 0 0 0" FontStyle="Italic" Text="{Binding OrderViewModel.OrderDetailViewModel.OrderSelected.AgentModel.TxtFirstName}"/>
                        <TextBlock Margin="10 0 0 0" FontStyle="Italic" Text="{Binding OrderViewModel.OrderDetailViewModel.OrderSelected.AgentModel.TxtLastName}"/>
                    </StackPanel>
                </StackPanel>
            </materialDesign:ColorZone>
            
            <!-- Item list zone -->
            
            <materialDesign:Card Grid.Row="2" Margin="0 0 0 15"  MaxWidth="990">
                <StackPanel Orientation="Vertical">
                    <materialDesign:ColorZone Mode="PrimaryMid">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Name="txtBWaitValid" HorizontalAlignment="Center">Items List</TextBlock>
                            <DataGrid x:Name="dgOrder_itemList" AutoGenerateColumns="False" IsReadOnly="True"
                                ItemsSource="{Binding OrderViewModel.OrderDetailViewModel.Order_ItemModelList, UpdateSourceTrigger=PropertyChanged}" 
                                RowDetailsVisibilityMode="{Binding OrderViewModel.OrderDetailViewModel.BlockItemListDetailVisibility}"
                                CanUserAddRows="False">
                                <DataGrid.RowDetailsTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Background="{DynamicResource PrimaryHueMidForegroundBrush}">
                                                <StackPanel Orientation="Vertical">
                                                    <TextBox Text="{Binding TxtComment_Purchase_Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Comment"
                                                     Background="White" MinLines="5" Width="300"  TextWrapping="Wrap" AcceptsReturn="True" HorizontalAlignment="Left"/>
                                                </StackPanel>
                                            </Border>
                                            <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center">
                                                <TextBox Text="{Binding TxtQuantity_received, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Quantity received"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGrid.RowDetailsTemplate>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Reference" Binding="{Binding TxtItem_ref}"/>
                                    <DataGridTextColumn Header="Item" Binding="{Binding ItemModel.TxtName}"/>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding TxtPrice_purchase, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                                     IsEnabled="{Binding DataContext.OrderViewModel.OrderDetailViewModel.IsItemListPurchasePriceTextBoxEnable, ElementName=dgOrder_itemList, UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Purchase Price"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding TxtPrice, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                                     IsEnabled="{Binding DataContext.OrderViewModel.OrderDetailViewModel.IsItemListSellingPriceTextBoxEnable, ElementName=dgOrder_itemList, UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="sale Price"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding TxtQuantity, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                                     IsEnabled="{Binding DataContext.OrderViewModel.OrderDetailViewModel.IsItemListQuantityTextBoxEnable, ElementName=dgOrder_itemList, UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Quantity"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Quantity Pending" Binding="{Binding TxtQuantity_pending, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataGridTextColumn Header="Total Sales" Binding="{Binding TxtTotalSelling, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataGridTextColumn Header="Total Income (%)" Binding="{Binding TxtPercentProfit, UpdateSourceTrigger=PropertyChanged}"/>
                                    <!--<DataGridTextColumn Header="" Binding=""/>-->
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock Text="{Binding DataContext.OrderViewModel.OrderDetailViewModel.TxtIncomeHeaderWithCurrency, ElementName=dgOrder_itemList, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding TxtProfit, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock>Delete</TextBlock>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <Button Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.DeleteItemCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                        CommandParameter="{Binding CurrentItem, ElementName=dgOrder_itemList}">
                                                        <materialDesign:PackIcon Kind="Delete"/>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </materialDesign:ColorZone>
                    <Button Margin="8" 
                        Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.UpdateOrder_itemListCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                        HorizontalAlignment="Center">
                        <materialDesign:PackIcon Kind="Pencil"/>
                    </Button>
                </StackPanel>
            </materialDesign:Card>

            <!-- Summary zone -->
            
            <Grid Grid.Row="3" Margin="0 0 0 15">
                <StackPanel Margin="0 10 0 0" Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock  Margin="0 0 10 0">Total (Taxes Included)</TextBlock>
                    <TextBox Text="{Binding OrderViewModel.OrderDetailViewModel.TxtTotalTaxIncluded, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="0 0 10 0" Width="50" HorizontalAlignment="Center"  />
                    <TextBlock Margin="0 0 10 0">Total (Taxes Excluded)</TextBlock>
                    <TextBox Text="{Binding OrderViewModel.OrderDetailViewModel.TxtTotalTaxExcluded, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 10 0" Width="50"  IsEnabled="False" HorizontalAlignment="Center" />
                    <TextBlock Margin="0 0 10 0">Total Income (%)</TextBlock>
                    <TextBox Text="{Binding OrderViewModel.OrderDetailViewModel.TxtTotalIncomePercent, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 10 0" Width="50"  IsEnabled="False" HorizontalAlignment="Center" />
                    <TextBlock Margin="0 0 10 0" Text="{Binding OrderViewModel.OrderDetailViewModel.TxtIncomeHeaderWithCurrency, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Text="{Binding OrderViewModel.OrderDetailViewModel.TxtTotalIncome, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 10 0" Width="50"  IsEnabled="False" HorizontalAlignment="Center" />
                    <TextBlock Margin="0 0 10 0">Total Taxes Amount</TextBlock>
                    <TextBox Text="{Binding OrderViewModel.OrderDetailViewModel.TxtTotalTaxAmount, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 10 0" Width="50"  IsEnabled="False" HorizontalAlignment="Center" />
                    <TextBlock Margin="0 0 10 0">Tax</TextBlock>
                    <TextBox Text="{Binding OrderViewModel.OrderDetailViewModel.Tax.Value, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="0 0 10 0" Width="50"  HorizontalAlignment="Center" />
                </StackPanel>
            </Grid>

            <!-- Comments zone -->
            
            <Grid Grid.Row="4" Margin="0 0 0 15">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <materialDesign:Card Margin="0 0 10 0">
                            <Border Background="{DynamicResource PrimaryHueMidBrush}">
                                <StackPanel Width="300" Orientation="Vertical" Margin="0 0 10 0">
                                    <TextBlock HorizontalAlignment="Center">Private Comment</TextBlock>
                                    <TextBox Background="White" Text="{Binding OrderViewModel.SelectedOrderModel.TxtPrivateComment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinLines="5" TextWrapping="Wrap" AcceptsReturn="True"/>
                                </StackPanel>
                            </Border>
                        </materialDesign:Card>
                        <materialDesign:Card Margin="0 0 10 0">
                            <Border Background="{DynamicResource PrimaryHueLightBrush}">
                                <StackPanel Width="300" Orientation="Vertical" Margin="0 0 10 0">
                                    <TextBlock HorizontalAlignment="Center">Comment will be seen by the CLient on Quote</TextBlock>
                                    <TextBox Text="{Binding OrderViewModel.SelectedOrderModel.TxtPublicComment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinLines="5" TextWrapping="Wrap" AcceptsReturn="True"
                                             Background="White"/>
                                </StackPanel>
                            </Border>
                        </materialDesign:Card>
                        <materialDesign:Card>
                            <Border Background="{DynamicResource PrimaryHueDarkBrush}">
                                <StackPanel Width="300" Orientation="Vertical" Margin="0 0 10 0">
                                    <TextBlock HorizontalAlignment="Center">Admin Comment Only</TextBlock>
                                    <TextBox Background="White" Text="{Binding OrderViewModel.SelectedOrderModel.TxtAdminComment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinLines="5" TextWrapping="Wrap" AcceptsReturn="True"/>
                                </StackPanel>
                            </Border>
                        </materialDesign:Card>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                        <Button Command="{Binding OrderViewModel.OrderDetailViewModel.UpdateCommentCommand}">
                            <materialDesign:PackIcon Kind="Pencil"/>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Grid>

            <!-- Tax zone -->
            
            <materialDesign:Card Grid.Row="5" Margin="0 0 0 15" HorizontalAlignment="Center">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock>Select Tax</TextBlock>
                        <ComboBox Name="cbxTax" ItemsSource="{Binding OrderViewModel.TaxList, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding OrderViewModel.OrderDetailViewModel.Tax, UpdateSourceTrigger=PropertyChanged}"
                              Margin="8 0 0 0" Width="250">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Value}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Button Margin="8 0 0 0" 
                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.TaxCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                            CommandParameter="{Binding SelectedItem, ElementName=cbxTax}">
                            <materialDesign:PackIcon Kind="Check"/>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton IsChecked="{Binding OrderViewModel.OrderDetailViewModel.IsQuote, Mode=TwoWay}" GroupName="rbQoteType">Quote</RadioButton>
                            <RadioButton IsChecked="{Binding OrderViewModel.OrderDetailViewModel.IsProForma, Mode=TwoWay}" Margin="8 0 0 0" GroupName="rbQoteType">Pro Forma</RadioButton>
                        </StackPanel>
                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding OrderViewModel.OrderDetailViewModel.IsQuoteReferencesVisible, Mode=TwoWay}">Leave constructor references visible</CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBox Text="{Binding OrderViewModel.OrderDetailViewModel.TxtQuoteValidityInDays, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Validity of the quote (days)"/>
                        </StackPanel>
                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.GeneratePdfCreatedQuoteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                            Generate Quote.
                        </Button>
                    </StackPanel>
                </Grid>
            </materialDesign:Card>

            <!-- Delivery Address Zone -->
            
            <Border Grid.Row="6" BorderBrush="Beige" BorderThickness="5" MaxWidth="980" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockDeliveryAddressVisiblity}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" HorizontalAlignment="Center">Delivery Address</TextBlock>
                    <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
                        <ComboBox Name="cbxDeliveryAddress" SelectedItem="{Binding OrderViewModel.SelectedOrderModel.DeliveryAddress, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding OrderViewModel.SelectedOrderModel.AddressList, UpdateSourceTrigger=PropertyChanged}" Width="250">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Button Margin="8 0 0 0" 
                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.DeliveryAddressSelectionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                            CommandParameter="{Binding SelectedItem, ElementName=cbxDeliveryAddress}">
                            <materialDesign:PackIcon Kind="Check"/>
                        </Button>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" Grid.Row="1" Grid.Column="2" Orientation="Vertical">
                        <TextBlock Text="{Binding SelectedItem.AddressName, ElementName=cbxDeliveryAddress, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding SelectedItem.CityName, ElementName=cbxDeliveryAddress, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding SelectedItem.Postcode, ElementName=cbxDeliveryAddress, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        </StackPanel>
                        <TextBlock Text="{Binding SelectedItem.Country, ElementName=cbxDeliveryAddress, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        <TextBlock Text="{Binding SelectedItem.Comment, ElementName=cbxDeliveryAddress, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Delivery receipt creation zone -->
            
            <StackPanel Orientation="Vertical"  Grid.Row="7" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockDeliveryReceiptCreationVisiblity, UpdateSourceTrigger=PropertyChanged}">
                <materialDesign:Card >
                    <materialDesign:ColorZone Mode="PrimaryMid">
                        <StackPanel Orientation="Vertical">
                            <TextBlock HorizontalAlignment="Center">Delivery receipt creation</TextBlock>
                            <DataGrid Name="dgDeliveryCreation" ItemsSource="{Binding OrderViewModel.OrderDetailViewModel.Item_ModelDeliveryInProcess, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"
                                  CanUserAddRows="False" MaxWidth="990">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Item Reference" Binding="{Binding Item.Ref}"/>
                                    <DataGridTextColumn Header="Item Name" Binding="{Binding Item.Name}"/>
                                    <DataGridTextColumn Header="Quantity in Process" Binding="{Binding TxtQuantity_current}"/>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock>Number of Packages</TextBlock>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding DeliveryModel.TxtPackage, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Number of Packages"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.CancelDeliveryReceiptCreationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                            CommandParameter="{Binding CurrentItem, ElementName=dgDeliveryCreation}">
                                                    Cancel this ref.
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </materialDesign:ColorZone>
                </materialDesign:Card>
                <StackPanel Orientation="Vertical" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockStepOneVisibility, UpdateSourceTrigger=PropertyChanged}">
                    <Button Margin="8" HorizontalAlignment="Center" Style="{DynamicResource MaterialDesignFlatButton}"
                                    Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.DeliveryReceiptCreationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                        Step 1/3 Create delivery receipt for the received items
                    </Button>
                </StackPanel>
            </StackPanel>

            <!-- Bill creation zone -->
            
            <StackPanel Grid.Row="8" Orientation="Vertical" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockBillCreationVisibility}">
                <materialDesign:Card>
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <materialDesign:ColorZone Grid.Row="1" Grid.ColumnSpan="2" Mode="PrimaryMid">
                            <StackPanel Orientation="Vertical">
                                <TextBlock HorizontalAlignment="Center">Invoices Creation</TextBlock>
                                <DataGrid Name="dgBillCreation"
                                    ItemsSource="{Binding OrderViewModel.OrderDetailViewModel.Item_deliveryModelBillingInProcess, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"
                                    CanUserAddRows="False" MaxWidth="990">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Delivery ID" Binding="{Binding DeliveryModel.TxtID, UpdateSourceTrigger=PropertyChanged}"/>
                                        <DataGridTextColumn Header="Create date" Binding="{Binding DeliveryModel.TxtDate, UpdateSourceTrigger=PropertyChanged}"/>
                                        <DataGridTextColumn Header="Packages" Binding="{Binding DeliveryModel.TxtPackage, UpdateSourceTrigger=PropertyChanged}"/>
                                        <DataGridTextColumn Header="Item Reference" Binding="{Binding TxtItem_ref, UpdateSourceTrigger=PropertyChanged}"/>
                                        <DataGridTextColumn Header="Item Name" Binding="{Binding Item.Name, UpdateSourceTrigger=PropertyChanged}"/>
                                        <DataGridTextColumn Header="Quantity Delivery" Binding="{Binding TxtQuantity_delivery, UpdateSourceTrigger=PropertyChanged}"/>
                                        <DataGridTemplateColumn>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                        <CheckBox Command="{Binding ItemModel.Item_deliveryModel.DeliveryModel.IsConstructorRefVisible}">
                                                            Refs Constructor visible.
                                                        </CheckBox>
                                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.GenerateDeliveryReceiptCreatedPdfCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                            CommandParameter="{Binding CurrentItem.DeliveryModel, ElementName=dgBillCreation}">
                                                            Generate receipt Pdf.
                                                        </Button>
                                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                                Content="Cancel this ref."
                                                                CommandParameter="{Binding}">
                                                            <Button.Command>
                                                                <MultiBinding Converter="{StaticResource TriggerConverter}">
                                                                    <Binding Path="DataContext.OrderViewModel.OrderDetailViewModel.CancelDeliveryReceiptCreatedCommand"
                                                                            ElementName="dgBillCreation" />
                                                                    <Binding />
                                                                </MultiBinding>
                                                            </Button.Command>
                                                            
                                                        </Button>
                                                        <!--<Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.CancelDeliveryReceiptCreatedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                            CommandParameter="{Binding}">
                                                            Cancel this ref.
                                                        </Button>-->
                                                    </StackPanel>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </StackPanel>
                        </materialDesign:ColorZone>
                    </Grid>
                </materialDesign:Card>
                
                
                <!-- Delivery receipt to include -->
                
                <StackPanel Orientation="Vertical">
                    <DataGrid ItemsSource="{Binding OrderViewModel.OrderDetailViewModel.Item_deliveryModelBillingInProcessSelectionList, UpdateSourceTrigger=PropertyChanged}"
                              MaxWidth="990" MaxHeight="200" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockDeliveryListToIncludeVisibility, UpdateSourceTrigger=PropertyChanged}"
                              AutoGenerateColumns="False" CanUserAddRows="False">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <TextBlock>Delivery ID to include</TextBlock>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Margin="0 0 5 0" Content="{Binding DeliveryModel.TxtID}" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <TextBlock>Packages</TextBlock>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DeliveryModel.TxtPackage}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Orientation="Vertical"  Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockStepTwoVisibility, UpdateSourceTrigger=PropertyChanged}">
                        <Button Margin="5" Style="{DynamicResource MaterialDesignFlatButton}"  HorizontalAlignment="Center"
                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.BillCreationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                            Step 2/3 Create Invoice for the selected items
                        </Button>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

            <!-- Delivery Created zone -->
            
            <Grid Grid.Row="9" Margin="0 0 0 15" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockDeliveryReceiptCreatedVisibility}">
                <Grid>
                    <materialDesign:Card>
                        <materialDesign:ColorZone Mode="PrimaryMid">
                            <StackPanel Orientation="Vertical">
                                <TextBlock HorizontalAlignment="Center">Delivery receipt created</TextBlock>
                                <DataGrid Name="dgDeliveryCreated"  ItemsSource="{Binding OrderViewModel.OrderDetailViewModel.DeliveryModelList, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"
                                      CanUserAddRows="False" MaxWidth="990">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                                        <DataGridTextColumn Header="Create date" Binding="{Binding TxtDate}"/>
                                        <DataGridTextColumn Header="Package" Binding="{Binding TxtPackage}"/>
                                      <DataGridTemplateColumn>
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock>Action</TextBlock>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Vertical">
                                                        <CheckBox Command="{Binding IsConstructorRefVisible}">
                                                            Refs Constructor visible.
                                                        </CheckBox>
                                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.GenerateDeliveryReceiptCreatedPdfCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                            CommandParameter="{Binding CurrentItem, ElementName=dgDeliveryCreated}">
                                                            Generate receipt Pdf.
                                                        </Button>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </StackPanel>
                        </materialDesign:ColorZone>
                    </materialDesign:Card>
                </Grid>
            </Grid>

            <!-- Bill created zone -->
            
            <materialDesign:Card Grid.Row="10" Margin="0 0 0 15" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockBillCreatedVisibility}">
                <materialDesign:ColorZone Mode="PrimaryMid">
                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Center">Invoices Created</TextBlock>
                        <DataGrid Name="dgBillCreated"  ItemsSource="{Binding OrderViewModel.OrderDetailViewModel.BillModelList, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"
                              CanUserAddRows="False" MaxWidth="990" RowDetailsVisibilityMode="Visible" CanUserDeleteRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Bill ID" Binding="{Binding TxtID, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Created Date" Binding="{Binding TxtDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Amount" Binding="{Binding TxtPay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Limit Date" Binding="{Binding TxtDateLimit, UpdateSourceTrigger=LostFocus}"/>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.Header>
                                        <TextBlock>Invoice</TextBlock>
                                    </DataGridTemplateColumn.Header>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.GeneratePdfCreatedBillCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                            CommandParameter="{Binding CurrentItem, ElementName=dgBillCreated}">
                                                    Generate bill Pdf.
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.Header>
                                        <TextBlock>Action</TextBlock>
                                    </DataGridTemplateColumn.Header>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                <CheckBox  IsChecked="{Binding DataContext.OrderViewModel.OrderDetailViewModel.IsOrderReferencesVisible, ElementName=dgBillCreated, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                    Refs Constructor visible.
                                                </CheckBox>
                                                <!--<Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                            Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.CancelBillCreatedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                            CommandParameter="{Binding CurrentItem, ElementName=dgBillCreated}">
                                                    Cancel this ref.
                                                </Button>-->
                                                <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                                Content="Cancel this ref."
                                                                CommandParameter="{Binding}">
                                                    <Button.Command>
                                                        <MultiBinding Converter="{StaticResource TriggerConverter}">
                                                            <Binding Path="DataContext.OrderViewModel.OrderDetailViewModel.CancelBillCreatedCommand"
                                                                            ElementName="dgBillCreated" />
                                                            <Binding />
                                                        </MultiBinding>
                                                    </Button.Command>

                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="200"/>
                                                <ColumnDefinition Width="200"/>
                                                <ColumnDefinition Width="300"/>
                                                <ColumnDefinition Width="300"/>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="1"  Orientation="Horizontal">
                                                <TextBox Text="{Binding TxtPayReceived, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Amount Payed"/>
                                            </StackPanel>
                                            <StackPanel Grid.Row="1" Grid.Column="1"  Orientation="Horizontal">
                                                <TextBox Text="{Binding TxtPayMod, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                     materialDesign:HintAssist.Hint="Pay Method"/>
                                            </StackPanel>
                                            <StackPanel Grid.Row="2" Grid.Column="1"  Orientation="Horizontal">
                                                <DatePicker SelectedDate="{Binding TxtPayDate, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"  Width="100" HorizontalAlignment="Left" Margin="0 16 0 0" materialDesign:HintAssist.Hint="Pay Dat" SelectedDateFormat="Short" />
                                            </StackPanel>
                                            <Border Grid.Row="3" Grid.Column="2" Background="{DynamicResource PrimaryHueMidBrush}">
                                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                    <TextBlock>Private Comment</TextBlock>
                                                    <TextBox MinHeight="100" MinWidth="200"  Background="White" Text="{Binding TxtPrivateComment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="wrap" AcceptsReturn="True" MinLines="3"/>
                                                </StackPanel>
                                            </Border>
                                            <Border Grid.Row="3" Grid.Column="3" Background="{DynamicResource PrimaryHueLightBrush}">
                                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                    <TextBlock>Public Comment</TextBlock>
                                                    <TextBox MinHeight="100" MinWidth="200"  MaxWidth="990"  Background="White" Text="{Binding TxtPublicComment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="wrap" AcceptsReturn="True" MinLines="3"/>
                                                </StackPanel>
                                            </Border>
                                            <Button Grid.Row="4" Grid.ColumnSpan="2"  HorizontalAlignment="Center"
                                                Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.UpdateBillCommand, ElementName=dgBillCreated}"
                                                CommandParameter="{Binding CurrentItem, ElementName=dgBillCreated}">
                                                <materialDesign:PackIcon Kind="Pencil"/>
                                            </Button>
                                        </Grid>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>
                        </DataGrid>
                    </StackPanel>
                </materialDesign:ColorZone>
            </materialDesign:Card>

            <!-- Email zone -->
            
            <Grid Grid.Row="11" Margin="0 0 0 15">
                <materialDesign:ColorZone>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical"  Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockEmailVisibility, UpdateSourceTrigger=PropertyChanged}">
                            <Border BorderBrush="Red">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock HorizontalAlignment="Center">Email Invoice</TextBlock>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock>Subject:</TextBlock>
                                        <TextBox  Text="{Binding OrderViewModel.OrderDetailViewModel.EmailFile.TxtSubject, Mode=TwoWay}" Width="400" Background="White"/>
                                    </StackPanel>
                                    <TextBox CaretBrush="Black" Margin="8 0 8 8" Background="White" IsEnabled="False"
                                         Text="{Binding OrderViewModel.OrderDetailViewModel.EmailFile.TxtContent, Mode=TwoWay}"
                                         MinLines="10" 
                                         TextWrapping="Wrap" 
                                         AcceptsReturn="True"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Vertical"  Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockEmailVisibility, UpdateSourceTrigger=PropertyChanged}">
                            <CheckBox  Content="Constructor References Visible" IsChecked="{Binding OrderViewModel.OrderDetailViewModel.IsOrderReferencesVisible, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBox Width="80" Text="{Binding OrderViewModel.OrderDetailViewModel.TxtQuoteValidityInDays, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsEnabled="False"/>
                                <TextBlock>Quote validity(in days)</TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockBillListBoxVisibility}">
                                <TextBlock VerticalAlignment="Center"  Margin="0 0 10 0">Add the Following Invoice</TextBlock>
                                <ComboBox Name="cbxInvoiceListToEmail" ItemsSource="{Binding OrderViewModel.OrderDetailViewModel.OrderSelected.BillModelList}" SelectedItem="{Binding OrderViewModel.OrderDetailViewModel.SelectedBillToSend, UpdateSourceTrigger=PropertyChanged}"
                                      IsSynchronizedWithCurrentItem="True" VerticalAlignment="Center">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding TxtID}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Orientation="Horizontal"  Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockEmailVisibility, UpdateSourceTrigger=PropertyChanged}">
                            <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                Command="{Binding OrderViewModel.OrderDetailViewModel.SendEmailCommand}"
                                    CommandParameter="{Binding SelectedItem, ElementName=cbxInvoiceListToEmail}">
                                Send Email
                            </Button>
                            <TextBlock VerticalAlignment="Center">a Copy will be send to you</TextBlock>
                        </StackPanel>
                        <StackPanel Grid.Row="3" Orientation="Vertical" HorizontalAlignment="Center" Visibility="{Binding OrderViewModel.OrderDetailViewModel.BlockStepThreeVisibility, UpdateSourceTrigger=PropertyChanged}">
                            <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                Command="{Binding DataContext.OrderViewModel.OrderDetailViewModel.BilledCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                                <TextBlock>Step 3/3 Confirm sending and billing all items of this Order (Status: waiting to be paid)</TextBlock>
                            </Button>
                            <TextBlock>Caution: Make sure you have generated all Delivery receipts and Invoices before updating the status</TextBlock>
                        </StackPanel>
                    </Grid>
                </materialDesign:ColorZone>
            </Grid>

    </Grid>

        <!-- End -->

    </Grid>
    
        
</UserControl>
